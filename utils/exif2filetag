#!/usr/bin/env bash

# TODO: Document properly. Comments.

path=${1:-}
exif_tag=${2:-}
new_tag=${3:-${exif_tag}}

function die()
{
    printf "%s. Exiting ..\n" "${1:-"Unspecified error"}" 2>&1
    exit 1
}

if [ $# -lt 2 ]
then
    HSPACE='      '
    FORMAT="${HSPACE}%s\n"
    printf "%s\n" "USAGE: \"$(basename 0) /starting/path [MATCH EXIF TAG] [NEW FILETAG]\""
    printf "$FORMAT" "The starting path is searched recursively for images with any EXIF tags."
    printf "$FORMAT" "Images with EXIF keywords that matches (also partial) [MATCH EXIF TAG]"
    printf "$FORMAT" "is then sent to \"filetags\", which tags the image with [NEW FILETAG]."
fi

[ -n "$path" ]     || die "Path not specified"
[ -d "$path" ]     || die "Invalid path"
[ -n "$exif_tag" ] || die "Exif tag not specified"
[ -n "$new_tag" ]  || die "New tag not specified"

printf "%20.20s : %-50.50s\n" "starting path" "$path"
printf "%20.20s : %-50.50s\n" "match EXIF tag" "$exif_tag"
printf "%20.20s : %-50.50s\n" "new tag" "$new_tag"


function find_images_with_exif_tag()
{
    exiftool -quiet -ignoreMinorErrors -if "\$keywords =~ /${exif_tag}/i" \
        -filename -r -p '$directory/$filename' "$path"
}


# find_images_with_exif_tag | xargs -d '\n' filetags --dryrun -t "$new_tag"
find_images_with_exif_tag | xargs --no-run-if-empty --delimiter='\n' filetags -t "$new_tag"


exit $?
